{"ast":null,"code":"var _jsxFileName = \"F:\\\\ttttt\\\\movies\\\\src\\\\components\\\\hero-slide\\\\HeroSlide.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport tmdbApi, { category, movieType } from \"../../api/tmdbApi\";\nimport \"./HeroSlide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport apiConfig from \"../../api/apiConfig\";\nimport 'swiper/swiper.scss';\nimport Button, { OutlineButton } from \"../button/button\";\nimport { useNavigate } from \"react-router\";\nimport Modal, { ModalContent } from \"../modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeroSlide(props) {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItem, setMovieItem] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItem(response.results);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper // module={[Autoplay]}\n    // grabCursor={true}\n    // spaceBetween={0}\n    // slidesPerView={1}\n    , {\n      children: movieItem.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(HeroSlideItem, {\n            item: item,\n            className: `${isActive ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), movieItem.map((item, i) => /*#__PURE__*/_jsxDEV(TrailerModal, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeroSlide, \"B4HJQiI23UIy9SrIE/n0onj4vik=\");\n\n_c = HeroSlide;\n\nconst HeroSlideItem = props => {\n  _s2();\n\n  let navigation = useNavigate();\n  const item = props.item;\n  const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n  const setModalAction = async () => {\n    const modal = document.querySelector(`#modal_${item.id}`);\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n    if (videos.results.length > 0) {\n      const videoSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\n      modal.querySelector('.modal__content > iframe').setAttribute('src', videoSrc);\n    } else {\n      modal.querySelector('.modal__content').innerHTML = 'No trailer';\n    }\n\n    modal.classList.toggle('active');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hero-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-slide__item__content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview\",\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigation('/movie/' + item.id),\n            children: \"watch now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n            onClick: setModalAction,\n            children: \"watch trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(item.poster_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HeroSlideItem, \"7sZc5EvTsFMSo4mPTlyGC/0+rew=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = HeroSlideItem;\n\nconst TrailerModal = props => {\n  _s3();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n\n  const onClose = () => iframeRef.current.setAttribute('src', '');\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    action: false,\n    id: `modal_${item.id}`,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: iframeRef,\n        width: \"100%\",\n        height: \"500px\",\n        title: \"trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(TrailerModal, \"HIHwOEFe13FUYgDPZ3BBEH738M4=\");\n\n_c3 = TrailerModal;\nexport default HeroSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HeroSlide\");\n$RefreshReg$(_c2, \"HeroSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"sources":["F:/ttttt/movies/src/components/hero-slide/HeroSlide.js"],"names":["React","useEffect","useRef","useState","SwiperCore","Autoplay","tmdbApi","category","movieType","Swiper","SwiperSlide","apiConfig","Button","OutlineButton","useNavigate","Modal","ModalContent","HeroSlide","props","use","movieItem","setMovieItem","getMovies","params","page","response","getMoviesList","popular","results","e","console","log","map","item","i","isActive","HeroSlideItem","navigation","background","originalImage","backdrop_path","poster_path","setModalAction","modal","document","querySelector","id","videos","getVideos","movie","length","videoSrc","key","setAttribute","innerHTML","classList","toggle","className","backgroundImage","title","overview","w500Image","TrailerModal","iframeRef","onClose","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport tmdbApi, { category, movieType } from \"../../api/tmdbApi\";\r\nimport \"./HeroSlide.scss\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nimport 'swiper/swiper.scss';\r\nimport Button, { OutlineButton } from \"../button/button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Modal, { ModalContent } from \"../modal/Modal\";\r\n\r\nfunction HeroSlide(props) {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItem, setMovieItem] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = { page: 1 }\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, { params });\r\n                setMovieItem(response.results);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        getMovies();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n            // module={[Autoplay]}\r\n            // grabCursor={true}\r\n            // spaceBetween={0}\r\n            // slidesPerView={1}\r\n            >\r\n                {\r\n                    movieItem.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            {\r\n                movieItem.map((item, i) => <TrailerModal key={i} item={item} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroSlideItem = props => {\r\n    let navigation = useNavigate();\r\n    const item = props.item;\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n\r\n    const setModalAction = async () => {\r\n        const modal = document.querySelector((`#modal_${item.id}`));\r\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\r\n\r\n        if (videos.results.length > 0) {\r\n            const videoSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videoSrc);\r\n        } else {\r\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\r\n        }\r\n\r\n        modal.classList.toggle('active');\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`hero-slide__item ${props.className}`}\r\n            style={{ backgroundImage: `url(${background})` }}\r\n        >\r\n            <div className=\"hero-slide__item__content container\">\r\n                <div className=\"hero-slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => navigation('/movie/' + item.id)}>\r\n                            watch now\r\n                        </Button>\r\n                        <OutlineButton onClick={setModalAction}>\r\n                            watch trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return (\r\n        <Modal action={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose}>\r\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HeroSlide;\r\n"]},"metadata":{},"sourceType":"module"}