{"ast":null,"code":"var _jsxFileName = \"F:\\\\ttttt\\\\movies\\\\src\\\\components\\\\movieGrid\\\\MoviesGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./MoviesGrid.scss\";\nimport { useParams } from \"react-router\";\nimport tmdbApi, { category, movieType, tvType } from \"../../api/tmdbApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesGrid(props) {\n  _s();\n\n  const [items, setItem] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const {\n    keyword\n  } = useParams();\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n\n      if (keyword === undefined) {\n        const params = {};\n\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(movieType.upcoming, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTVList(tvType.popular, {\n              params\n            });\n        }\n      } else {}\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesGrid, \"kqni7w/JV33S0/hv8s5x4AALeyo=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviesGrid;\nexport default MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["F:/ttttt/movies/src/components/movieGrid/MoviesGrid.js"],"names":["React","useEffect","useState","useParams","tmdbApi","category","movieType","tvType","MoviesGrid","props","items","setItem","page","setPage","totalPage","setTotalPage","keyword","getList","response","undefined","params","movie","getMoviesList","upcoming","getTVList","popular"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAO,mBAAP;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,OAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAmD,mBAAnD;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAACc,IAAAA;AAAD,MAAYb,SAAS,EAA3B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,OAAO,GAAG,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAf;;AACA,UAAIF,OAAO,KAAKG,SAAhB,EAA0B;AACtB,cAAMC,MAAM,GAAG,EAAf;;AACA,gBAAQX,KAAK,CAACJ,QAAd;AACI,eAAKA,QAAQ,CAACgB,KAAd;AACIH,YAAAA,QAAQ,GAAG,MAAMd,OAAO,CAACkB,aAAR,CAAsBhB,SAAS,CAACiB,QAAhC,EAA0C;AAACH,cAAAA;AAAD,aAA1C,CAAjB;AACA;;AACJ;AACIF,YAAAA,QAAQ,GAAG,MAAMd,OAAO,CAACoB,SAAR,CAAkBjB,MAAM,CAACkB,OAAzB,EAAkC;AAACL,cAAAA;AAAD,aAAlC,CAAjB;AALR;AAOH,OATD,MASM,CAET;AAEA,KAfD;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BQZ,U;UAKaL,S;;;KALbK,U;AA+BT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport \"./MoviesGrid.scss\";\r\nimport {useParams} from \"react-router\";\r\nimport tmdbApi, {category, movieType, tvType} from \"../../api/tmdbApi\";\r\n\r\nfunction MoviesGrid(props) {\r\n\r\n    const [items, setItem] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n    const {keyword} = useParams();\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            if (keyword === undefined){\r\n                const params = {};\r\n                switch (props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTVList(tvType.popular, {params});\r\n                }\r\n            }else {\r\n            \r\n        }\r\n\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesGrid;\r\n"]},"metadata":{},"sourceType":"module"}