{"ast":null,"code":"var _jsxFileName = \"F:\\\\ttttt\\\\movies\\\\src\\\\components\\\\hero-slide\\\\HeroSlide.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport tmdbApi, { movieType } from \"../../api/tmdbApi\";\nimport \"./HeroSlide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport apiConfig from \"../../api/apiConfig\";\nimport 'swiper/swiper.scss';\nimport Button, { OutlineButton } from \"../button/button\";\nimport { useNavigate } from \"react-router\";\nimport Modal from \"../Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeroSlide(props) {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItem, setMovieItem] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItem(response.results);\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      module: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1,\n      children: movieItem.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(HeroSlideItem, {\n            item: item,\n            className: `${isActive ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeroSlide, \"B4HJQiI23UIy9SrIE/n0onj4vik=\");\n\n_c = HeroSlide;\n\nconst HeroSlideItem = props => {\n  _s2();\n\n  let navigation = useNavigate();\n  const item = props.item;\n  const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hero-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-slide__item__content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview\",\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigation.push('./movie' + item.id),\n            children: \"watch now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n            onClick: () => console.log('trailer'),\n            children: \"watch trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(item.poster_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HeroSlideItem, \"7sZc5EvTsFMSo4mPTlyGC/0+rew=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = HeroSlideItem;\n\nconst TrailerModal = props => {\n  _s3();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n\n  const onClose = () => iframeRef.current.setAttribute('src', '');\n\n  return /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(TrailerModal, \"HIHwOEFe13FUYgDPZ3BBEH738M4=\");\n\n_c3 = TrailerModal;\nexport default HeroSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HeroSlide\");\n$RefreshReg$(_c2, \"HeroSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"sources":["F:/ttttt/movies/src/components/hero-slide/HeroSlide.js"],"names":["React","useEffect","useRef","useState","SwiperCore","Autoplay","tmdbApi","movieType","Swiper","SwiperSlide","apiConfig","Button","OutlineButton","useNavigate","Modal","HeroSlide","props","use","movieItem","setMovieItem","getMovies","params","page","response","getMoviesList","popular","results","console","log","e","map","item","i","isActive","HeroSlideItem","navigation","background","originalImage","backdrop_path","poster_path","className","backgroundImage","title","overview","push","id","w500Image","TrailerModal","iframeRef","onClose","current","setAttribute"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport SwiperCore, {Autoplay} from 'swiper';\r\nimport tmdbApi, {movieType} from \"../../api/tmdbApi\";\r\nimport \"./HeroSlide.scss\";\r\nimport {Swiper, SwiperSlide} from \"swiper/react\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nimport 'swiper/swiper.scss';\r\nimport Button, {OutlineButton} from \"../button/button\";\r\nimport {useNavigate} from \"react-router\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nfunction HeroSlide(props) {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItem, setMovieItem] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const getMovies = async () => {\r\n            const params = {page:1}\r\n            try{\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovieItem(response.results);\r\n                console.log(response)\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        getMovies();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                module={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n            >\r\n                {\r\n                    movieItem.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive}) => (\r\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`}/>\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst  HeroSlideItem = props => {\r\n    let navigation = useNavigate();\r\n    const  item = props.item;\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n    return (\r\n        <div\r\n            className={`hero-slide__item ${props.className}`}\r\n            style={{backgroundImage: `url(${background})`}}\r\n        >\r\n            <div className=\"hero-slide__item__content container\">\r\n                <div className=\"hero-slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => navigation.push('./movie' + item.id)}>\r\n                            watch now\r\n                        </Button>\r\n                        <OutlineButton onClick={() => console.log('trailer')}>\r\n                            watch trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return (\r\n        <Modal>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HeroSlide;\r\n"]},"metadata":{},"sourceType":"module"}