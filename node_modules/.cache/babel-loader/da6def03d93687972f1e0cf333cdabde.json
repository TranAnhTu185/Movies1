{"ast":null,"code":"var _jsxFileName = \"F:\\\\ttttt\\\\movies\\\\src\\\\components\\\\movelist\\\\MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Movielist.scss';\nimport tmdbApi, { category } from \"../../api/tmdbApi\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport apiConfig from \"../../api/apiConfig\";\nimport MovieCard from \"../movieCard/MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nfunction MovieList(props) {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTVList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: 'auto',\n      children: items.map((item, id) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["F:/ttttt/movies/src/components/movelist/MovieList.js"],"names":["React","useEffect","useState","PropTypes","tmdbApi","category","Swiper","SwiperSlide","apiConfig","MovieCard","MovieList","propTypes","string","isRequired","type","props","items","setItems","getList","response","params","movie","getMoviesList","getTVList","similar","id","results","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,IAAiBC,QAAjB,QAAgC,mBAAhC;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,cAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAIAC,SAAS,CAACC,SAAV,GAAsB;AAClBN,EAAAA,QAAQ,EAACF,SAAS,CAACS,MAAV,CAAiBC,UADR;AAElBC,EAAAA,IAAI,EAAEX,SAAS,CAACS,MAAV,CAAiBC;AAFL,CAAtB;;AAKA,SAASH,SAAT,CAAmBK,KAAnB,EAA0B;AAAA;;AAEtB,QAAO,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,OAAO,GAAG,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAf;AACA,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAGL,KAAK,CAACD,IAAN,KAAe,SAAlB,EAA6B;AACzB,gBAAQC,KAAK,CAACV,QAAd;AACI,eAAKA,QAAQ,CAACgB,KAAd;AACIF,YAAAA,QAAQ,GAAG,MAAOf,OAAO,CAACkB,aAAR,CAAsBP,KAAK,CAACD,IAA5B,EAAkC;AAACM,cAAAA;AAAD,aAAlC,CAAlB;AACA;;AACJ;AACID,YAAAA,QAAQ,GAAG,MAAOf,OAAO,CAACmB,SAAR,CAAkBR,KAAK,CAACD,IAAxB,EAA8B;AAACM,cAAAA;AAAD,aAA9B,CAAlB;AALR;AAOH,OARD,MAQO;AACHD,QAAAA,QAAQ,GAAG,MAAMf,OAAO,CAACoB,OAAR,CAAgBT,KAAK,CAACV,QAAtB,EAAgCU,KAAK,CAACU,EAAtC,CAAjB;AACH;;AACDR,MAAAA,QAAQ,CAACE,QAAQ,CAACO,OAAV,CAAR;AACH,KAfD;;AAgBAR,IAAAA,OAAO;AACV,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,UAAU,EAAE,IADhB;AAEI,MAAA,YAAY,EAAE,EAFlB;AAGI,MAAA,aAAa,EAAE,MAHnB;AAAA,gBAMQF,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOH,EAAP,kBACN,QAAC,WAAD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEG,IAAjB;AAAuB,UAAA,QAAQ,EAAEb,KAAK,CAACV;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ,SAAkBoB,EAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzCQf,S;;KAAAA,S;AA2CT,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movielist.scss';\r\nimport tmdbApi, {category} from \"../../api/tmdbApi\";\r\nimport {Swiper, SwiperSlide} from \"swiper/react\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nimport MovieCard from \"../movieCard/MovieCard\";\r\n\r\n\r\n\r\nMovieList.propTypes = {\r\n    category:PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nfunction MovieList(props) {\r\n\r\n    const  [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n            if(props.type !== 'similar') {\r\n                switch (props.category) {\r\n                    case category.movie:\r\n                        response = await  tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await  tmdbApi.getTVList(props.type, {params});\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n                grabCursor={true}\r\n                spaceBetween={10}\r\n                slidesPerView={'auto'}\r\n            >\r\n                {\r\n                    items.map((item, id) => (\r\n                        <SwiperSlide key={id}>\r\n                            <MovieCard item={item} category={props.category}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}